package pbl.goorm.board.repository;

import jakarta.persistence.EntityManager;
import lombok.extern.slf4j.Slf4j;
import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.transaction.annotation.Transactional;
import pbl.goorm.board.model.DeleteStatus;
import pbl.goorm.board.model.dto.CommentUpdateDto;
import pbl.goorm.board.model.entity.Board;
import pbl.goorm.board.model.entity.Comment;

import java.util.ArrayList;
import java.util.Optional;

import static org.assertj.core.api.Assertions.*;


//need to make id autogenerated
@Slf4j
@Transactional
@SpringBootTest
public class CommentRepositoryTest {

    @Autowired
    CommentRepository commentRepository;

    @Autowired
    BoardRepository boardRepository;

    @BeforeEach
    void beforeEach(){
        Board board = new Board(1L,
                "test",
                "testBoard",
                "testBody",
                DeleteStatus.ACTIVE,
                new ArrayList<>());
        Comment comment = new Comment();
        comment.setId(2L);
        comment.setBody("testComment");
        board.addComment(comment);
        boardRepository.save(board);
    }

    @AfterEach
    void afterEach(){
        commentRepository.clear();
    }

    @Test
    void delete(){
        commentRepository.delete(2L);
        Optional<Comment> findComment = commentRepository.findById(2L);
        assertThat(findComment.isEmpty()).isTrue();
    }

    @Test
    void update(){
        CommentUpdateDto updateDto = new CommentUpdateDto("modified");
        commentRepository.update(2L, updateDto);
        Comment findComment = commentRepository.findById(2L).orElseThrow();
        assertThat(findComment.getBody()).isEqualTo(updateDto.getBody());
    }

}
